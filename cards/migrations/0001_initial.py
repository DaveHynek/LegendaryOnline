# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-20 05:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

def create_card_set_seed_data(apps, schema_editor):
    CardSet = apps.get_model("cards", "CardSet")
    
    CardSet.objects.using(schema_editor.connection.alias).bulk_create([
        CardSet(name="Core")        
    ])

def delete_card_set_seed_data(apps, schema_editor):
    CardSet = apps.get_model("cards", "CardSet")
    db_alias = schema_editor.connection.alias
    
    CardSet.objects.using(db_alias).filter(name="Core").delete()

def create_hero_team_seed_data(apps, schema_editor):
    HeroicTeam = apps.get_model("cards", "HeroicTeam")
    
    HeroicTeam.objects.using(schema_editor.connection.alias).bulk_create([
        HeroicTeam(team_name="X-Men", description="Born as mutants, with strange superpowers that set them apart, the X-Men are sworn to protect a world that hates and fears them."),
        HeroicTeam(team_name="Avengers", description="And there came a day unlike any other, when Earth's mightiest heroes and heroines found themselves united against a common threat. On that day, the Avengers were born."),
        HeroicTeam(team_name="S.H.I.E.L.D.", description="The 'Strategic Hazard Intervention Espionage Logistics Directorate' is a clandestine military and espionage organization led by Director Nick Fury."),
        HeroicTeam(team_name="Spider Friends", description="Spider-Man received his powers after being bit by a radioactive spider and along with his allies will protect New York from those who would threaten the innocent.")
    ])

def delete_hero_team_seed_data(apps, schema_editor):
    HeroicTeam = apps.get_model("cards", "HeroicTeam")
    db_alias = schema_editor.connection.alias
    
    HeroicTeam.objects.using(db_alias).filter(team_name="X-Men").delete()
    HeroicTeam.objects.using(db_alias).filter(team_name="Avengers").delete()
    HeroicTeam.objects.using(db_alias).filter(team_name="S.H.I.E.L.D.").delete()
    HeroicTeam.objects.using(db_alias).filter(team_name="Spider Friends").delete()

def create_hero_class_seed_data(apps, schema_editor):
    HeroClass = apps.get_model("cards", "HeroClass")
    
    HeroClass.objects.using(schema_editor.connection.alias).bulk_create([
        HeroClass(class_name="Strength", description="Strength heroes include heroes with raw strength, but also heroes with strength of will, determination, and strong leadership."),
        HeroClass(class_name="Instinct", description="Instinct heroes use savagery and quick reflexes to dominate combats. Some Instinct heroes use superhuman senses to get an edge on their opponents."),
        HeroClass(class_name="Covert", description="Covert heroes include heroes using trickery and deception to outwit their foes. They also include heroes making clever battle plans and heroes using subtle superpowers to gain subtle advantages."),
        HeroClass(class_name="Tech", description="Tech heroes include heroes using advanced weaponry, incredible gadgets, brilliant inventions, or next-generation science."),
        HeroClass(class_name="Ranged", description="Ranged heroes like to blow things up. Some Ranged heroes use inherent superpowers to blast things, while others use energy beams, elemental powers, and mental assaults."),
        HeroClass(class_name="Basic", description="Basic heroes include all the starting S.H.I.E.L.D. heroes and officers. They are heroes in their own way, but they don't quite get the job done as well as high-flying super heroes.")
    ])

def delete_hero_class_seed_data(apps, schema_editor):
    HeroClass = apps.get_model("cards", "HeroClass")
    db_alias = schema_editor.connection.alias
    
    HeroClass.objects.using(db_alias).filter(class_name="Strength").delete()
    HeroClass.objects.using(db_alias).filter(class_name="Instinct").delete()
    HeroClass.objects.using(db_alias).filter(class_name="Covert").delete()
    HeroClass.objects.using(db_alias).filter(class_name="Tech").delete()
    HeroClass.objects.using(db_alias).filter(class_name="Ranged").delete()
    HeroClass.objects.using(db_alias).filter(class_name="Basic").delete()

def create_hero_seed_data(apps, schema_editor):
    Hero = apps.get_model("cards", "Hero")
    CardSet = apps.get_model("cards", "CardSet")
    HeroicTeam = apps.get_model("cards", "HeroicTeam")
    db_alias = schema_editor.connection.alias
    
    core_set = CardSet.objects.using(db_alias).get(name="Core")

    xmen = HeroicTeam.objects.using(db_alias).get(team_name="X-Men")
    avengers = HeroicTeam.objects.using(db_alias).get(team_name="Avengers")
    shield = HeroicTeam.objects.using(db_alias).get(team_name="S.H.I.E.L.D.")
    spider = HeroicTeam.objects.using(db_alias).get(team_name="Spider Friends")
    
    Hero.objects.using(db_alias).bulk_create([
        Hero(name="Black Widow", static_folder="widow", hero_team=avengers, card_set=core_set),
        Hero(name="Captain America", static_folder="captain", hero_team=avengers, card_set=core_set),
        Hero(name="Cyclops", static_folder="cyclops", hero_team=xmen, card_set=core_set),
        Hero(name="Deadpool", static_folder="deadpool", card_set=core_set),
        Hero(name="Emma Frost", static_folder="emma", hero_team=xmen, card_set=core_set),
        Hero(name="Nick Fury", static_folder="fury", hero_team=shield, card_set=core_set),
        Hero(name="Gambit", static_folder="gambit", hero_team=xmen, card_set=core_set),
        Hero(name="Hawkeye", static_folder="hawkeye", hero_team=avengers, card_set=core_set),
        Hero(name="Hulk", static_folder="hulk", hero_team=avengers, card_set=core_set),
        Hero(name="Iron Man", static_folder="ironman", hero_team=avengers, card_set=core_set),
        Hero(name="Rogue", static_folder="rogue", hero_team=xmen, card_set=core_set),
        Hero(name="Spider-Man", static_folder="spider", hero_team=spider, card_set=core_set),
        Hero(name="Storm", static_folder="storm", hero_team=xmen, card_set=core_set),
        Hero(name="Thor", static_folder="thor", hero_team=avengers, card_set=core_set),
        Hero(name="Wolverine", static_folder="wolverine", hero_team=xmen, card_set=core_set),
    ])

def delete_hero_seed_data(apps, schema_editor):
    Hero = apps.get_model("cards", "Hero")
    db_alias = schema_editor.connection.alias
    
    Hero.objects.using(db_alias).filter(name="Black Widow").delete()
    Hero.objects.using(db_alias).filter(name="Captain America").delete()
    Hero.objects.using(db_alias).filter(name="Cyclops").delete()
    Hero.objects.using(db_alias).filter(name="Deadpool").delete()
    Hero.objects.using(db_alias).filter(name="Emma Frost").delete()
    Hero.objects.using(db_alias).filter(name="Nick Fury").delete()
    Hero.objects.using(db_alias).filter(name="Gambit").delete()
    Hero.objects.using(db_alias).filter(name="Hawkeye").delete()
    Hero.objects.using(db_alias).filter(name="Hulk").delete()
    Hero.objects.using(db_alias).filter(name="Iron Man").delete()
    Hero.objects.using(db_alias).filter(name="Rogue").delete()
    Hero.objects.using(db_alias).filter(name="Spider-Man").delete()
    Hero.objects.using(db_alias).filter(name="Storm").delete()
    Hero.objects.using(db_alias).filter(name="Thor").delete()
    Hero.objects.using(db_alias).filter(name="Wolverine").delete()

def create_hero_card_seed_data(apps, schema_editor):
    HeroCard = apps.get_model("cards", "HeroCard")

def delete_hero_card_seed_data(apps, schema_editor):
    HeroCard = apps.get_model("cards", "HeroCard")
    db_alias = schema_editor.connection.alias

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('static_folder', models.CharField(max_length=20)),
                ('card_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.CardSet')),
            ],
        ),
        migrations.CreateModel(
            name='HeroCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_text', models.CharField(max_length=50)),
                ('cost', models.PositiveSmallIntegerField()),
                ('base_recruit', models.PositiveSmallIntegerField()),
                ('base_attack', models.PositiveSmallIntegerField()),
                ('quantity', models.PositiveSmallIntegerField()),
                ('card_file_name', models.CharField(max_length=20)),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.Hero')),
            ],
        ),
        migrations.CreateModel(
            name='HeroClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='HeroicTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='herocard',
            name='hero_class',
            field=models.ManyToManyField(to='cards.HeroClass'),
        ),
        migrations.AddField(
            model_name='hero',
            name='hero_team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cards.HeroicTeam'),
        ),
        migrations.RunPython(create_card_set_seed_data, delete_card_set_seed_data),
        migrations.RunPython(create_hero_team_seed_data, delete_hero_team_seed_data),
        migrations.RunPython(create_hero_class_seed_data, delete_hero_class_seed_data),
        migrations.RunPython(create_hero_seed_data, delete_hero_seed_data),
        migrations.RunPython(create_hero_card_seed_data, delete_hero_card_seed_data)
    ]
